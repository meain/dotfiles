#!/bin/sh

# Backup all project config files not backed up to project git to a separate git server
# TODO(meain): optimize this to run `find` only once. It is pretty expensive
set -e

SAVEPATH="$HOME/.local/share/project-configs-backup"
mkdir -p "$SAVEPATH"

# Ignores
# - temp directories
# - .build/checkouts (swift builds)
# - node_modules

backup_loc() {
    tput el && echo "Saving $1..."
    find "$HOME/dev" -type d -name '.git' |
        grep -v '/temp/' | grep -v '.build/checkouts' | grep -v '/node_modules/' |
        while read -r path; do
            dest="$2"
            [ -z "$dest" ] && dest="$1"

            dir="$(dirname "$path")"
            [ -e "$dir/$1" ] || continue
            cleanpath="$(echo "$dir" | sed "s|^$HOME/dev/||")"
            tput el && printf "%s\r" "$cleanpath"

            # if dir, copy contents else the file directly as we specifically set the dest
            if [ -d "$dir/$1" ]; then
                mkdir -p "$SAVEPATH/$cleanpath/$dest"
                cp -r "$dir/$1/"* "$SAVEPATH/$cleanpath/$dest"
            else
                mkdir -p "$SAVEPATH/$cleanpath"
                cp -r "$dir/$1" "$SAVEPATH/$cleanpath/$dest"
            fi
        done
}

backup_loc .git/config git-config
backup_loc .mscripts
backup_loc shell.nix
backup_loc default.nix
backup_loc .dir-locals.el
backup_loc default.rest
backup_loc flake.nix
backup_loc flake.lock
backup_loc .llmrules
backup_loc .llmdocs
backup_loc .roo
backup_loc .roorules
backup_loc mnotes.org
backup_loc .github/copilot-instructions.md
backup_loc OpenCode.md
backup_loc CLAUDE.md

cd "$SAVEPATH" || exit 1
git add .
git commit -m 'Update project configs'
git push origin master
