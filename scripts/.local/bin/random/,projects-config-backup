#!/bin/sh

# Backup all project config files not backed up to project git to a separate git server
set -e

SAVEPATH="$HOME/.local/share/project-configs-backup"
mkdir -p "$SAVEPATH"

# Configuration: files to backup
# Format: "source_path[:destination_name]"
# If no destination_name provided, uses source_path as destination
BACKUP_FILES="
.git/config:git-config
.mscripts
shell.nix
default.nix
.dir-locals.el
default.rest
flake.nix
flake.lock
.llmrules
.llmdocs
.roo
.roorules
mnotes.org
.github/copilot-instructions.md
OpenCode.md
CLAUDE.md
"

# Create temporary file to store git directories
fd -H -t d '^\.git$' "$HOME/dev" \
    --exclude 'temp' \
    --exclude '.build/checkouts' \
    --exclude 'node_modules' \
    --exclude 'infra/interviews' |
    while read -r git_path; do
        dir="${git_path%/.git/}"
        cleanpath="${dir#$HOME/dev/}"

        # Process each backup file for this repository
        while IFS= read -r backup_entry; do
            # Skip empty lines
            [ -n "$backup_entry" ] || continue

            # Parse source and destination using parameter expansion
            case "$backup_entry" in
            *:*)
                source_file="${backup_entry%%:*}"
                dest_name="${backup_entry#*:}"
                ;;
            *)
                source_file="$backup_entry"
                dest_name="$backup_entry"
                ;;
            esac

            source_path="$dir/$source_file"
            [ -e "$source_path" ] || continue

            tput el && printf "Saving %s/%s\r" "$cleanpath" "$source_file"

            dest_path="$SAVEPATH/$cleanpath/$dest_name"

            # Handle directories vs files
            if [ -d "$source_path" ]; then
                mkdir -p "$dest_path"
                cp -r "$source_path/"* "$dest_path" 2>/dev/null || true
            else
                # Create parent directory of the destination file
                mkdir -p "${dest_path%/*}"
                cp -r "$source_path" "$dest_path"
            fi
        done <<EOF
$BACKUP_FILES
EOF
    done

tput el # clear the line
cd "$SAVEPATH" || exit 1
git add -f .
git diff --stat --staged
git commit -m 'Update project configs'
git push origin master
