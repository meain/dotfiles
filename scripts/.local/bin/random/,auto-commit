#!/bin/sh

set -e

base="$(git rev-parse --show-toplevel 2>/dev/null)"

get_changes() {
    if [ -d "$base/.jj" ]; then
        jj diff -r "${1:-@}"
    elif [ -d "$base/.git" ]; then
        git diff --staged
    else
        echo "No git or jj repository found"
        exit 1
    fi
}

commit="${1:-@}"
changes=$(get_changes "$commit")
[ -n "$1" ] && shift

if [ -z "$changes" ]; then
    echo "No changes to commit"
    exit 1
fi

echo "$changes" | esa -- +commit "$*" | tee /tmp/auto-pr-message

while true; do
    read -n 1 -p "Use commit message (Y/n/r/e/m/?): " confirm
    commit_msg="$(cat /tmp/auto-pr-message)"

    case $confirm in
    [nN])
        exit 0
        ;;
    [eE])
        vim /tmp/auto-pr-message
        break
        ;;
    [rR])
        printf "\033[2K\r" # clear line
        echo
        echo "$changes" | esa -- +commit "$message" | tee /tmp/auto-pr-message
        continue
        ;;
    [yY] | "")
        break
        ;;
    [mM])
        printf "\033[2K\r" # clear line
        read -rp "Enter message for esa: " message
        esa -c -- +commit "$message" | tee /tmp/auto-pr-message
        continue
        ;;
    [\?])
        echo "Options:
        y/Y: Use commit message
        n/N: Skip commit
        r/R: Re-run esa with the same changes
        e/E: Edit commit message
        m/M: Enter a new message for esa
        ?: Show this help"
        continue
        ;;
    *)
        echo "Invalid input. Please enter 'y' or 'n'."
        exit 1
        ;;
    esac
done

commit_msg="$(cat /tmp/auto-pr-message)"
if [ -d "$base/.jj" ]; then
    jj desc -m "$commit_msg" -r "$commit"
elif [ -d "$base/.git" ]; then
    git commit -m "$commit_msg"
else
    echo "No git or jj repository found"
    exit 1
fi
