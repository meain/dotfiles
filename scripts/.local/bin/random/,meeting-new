#!/bin/sh

# Create a new meeting note and open in EDITOR

set -e

basedir="$HOME/.local/share/sbdb"
config="$basedir/.obsidian/plugins/quickadd/data.json"

# The script pulls the information from Obsidian quick-add plugin
# {
#   "choices": [
#     {
#       "name": "Meeting Note",
#       "templatePath": "Templates/Meeting Page.md",
#       "fileNameFormat": {
#         "enabled": true,
#         "format": "Meeting Name"
#       },
#       "folder": {
#         "folders": [
#           "Meeting/{{DATE:YYYY/MM/DD}}"
#         ],
#       },
#     }
#   ]
# }

meeting="$(jq -r '.choices[]|.name' <"$config" | fzf --prompt="Meeting type: " --query "$*")"

if [ -z "$meeting" ]; then
    echo "No meeting selected, exiting."
    exit 1
fi

open_editor() {
    # open "obsidian://open?path=$1"
    emacsclient -n "$1"
}

get_property() {
    jq -r ".choices[] | select(.name == \"$meeting\") | $1" <"$config"
}

meetingname="$(get_property .fileNameFormat.format)"
if [ "$(get_property .fileNameFormat.enabled)" = "false" ]; then
    read -rp "Enter meeting name: " meetingname || exit 1
fi

meetingtemplate="$(get_property .templatePath)"
meetingfile="$basedir/$(get_property '.folder.folders[0]' <"$config" |
    sed "s|{{DATE:YYYY/MM/DD}}|$(date +%Y/%m/%d)|")/$meetingname.md"

if [ -f "$meetingfile" ]; then
    echo "Meeting file already exists; Opening"
    open_editor "$meetingfile"
    exit 0
fi

mkdir -p "$(dirname "$meetingfile")"
sed "s|{{date}}|$(date +%Y/%m/%d)|" <"$basedir/$meetingtemplate" >"$meetingfile"
echo "Created meeting file: $(basename "$meetingfile")"
open_editor "$meetingfile"
