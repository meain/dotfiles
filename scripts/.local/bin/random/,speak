#!/bin/sh

set -e

CACHE_DIR="$HOME/.cache/piper"

modelhigh=en_US-ryan-high
modellow=en_US-ryan-high # can use medium

download_model() {
    model="$1-$2-$3.onnx"
    echo Downloading "$1-$2-$3"
    curl -Ls "https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/$1/$2/$3/$modelhigh?download=true" --output "$CACHE_DIR/$model"
    curl -Ls "https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/$1/$2/$3/$modelhigh.json?download=true.json" --output "$CACHE_DIR/$model.json"
}

# https://github.com/rhasspy/piper/blob/master/VOICES.md
if [ ! -f "$CACHE_DIR/$modelhigh.onnx" ]; then
    echo "Downloading models..."
    mkdir -p "$CACHE_DIR"
    download_model "$(echo "$modelhigh" | cut -d'-' -f1)" "$(echo "$modelhigh" | cut -d'-' -f2)" "$(echo "$modelhigh" | cut -d'-' -f3)"
    download_model "$(echo "$modellow" | cut -d'-' -f1)" "$(echo "$modellow" | cut -d'-' -f2)" "$(echo "$modellow" | cut -d'-' -f3)"
fi

input="$(cat /dev/stdin)"
mkdir -p /tmp/piper-stuff
# piper outputs filenames for each line which we can consume and playback
echo "$input" | sed 's/\. /\n/g' | tee /dev/stderr |
    piper -m "$CACHE_DIR/$modelhigh.onnx" --output_dir /tmp/piper-stuff 2>/tmp/piper-logs |
    xargs -I{} afplay -r "${1:-2.5}" {}
