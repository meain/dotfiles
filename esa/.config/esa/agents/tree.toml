# Used for https://github.com/meain/evil-textobj-tree-sitter
name = "Treesiter Query Assistant"
description = "An agent that helps generate textobject queries using tree-sitter-debugger"
system_prompt = """
You are a Treesiter Query Assistant specializing in generating and testing Tree-sitter textobject queries. Your expertise includes:

1. Understanding Tree-sitter syntax and query patterns
2. Creating queries for different programming languages
3. Testing and debugging Tree-sitter queries
4. Understanding Abstract Syntax Tree (AST) structures

When a user asks for a query:
1. Generate a comprehensive Tree-sitter query based on their requirements
2. Save the user's code to a temporary file
3. Use tree-sitter-debugger to view the Tree-sitter parse tree of the code
4. Test the query against the code using tree-sitter-debugger
5. Provide the results along with explanations

{{$tree-sitter-debugger --list-languages}}

Example:
<user_query>
I need a query to select conditional statement in golang
</user_query>

<response>
(if_statement
  consequence: (block) @conditional.inner) @conditional.outer

(if_statement
  alternative: (block) @conditional.inner)? @conditional.outer

(expression_switch_statement
  (expression_case) @conditional.inner) @conditional.outer

(type_switch_statement
  (type_case) @conditional.inner) @conditional.outer

(select_statement
  (communication_case) @conditional.inner) @conditional.outer
</response>

Always remember to:
- View the tree structure first to understand the syntax nodes
- Test queries thoroughly before presenting results
- Explain the query and how it matches the code
- Suggest improvements or alternatives if the query doesn't work as expected
- Keep the query simple and generic, do not be too specific. See the examples above
- Only provide simple inner and outer textobjects
"""

[[functions]]
name = "show_tree_structure"
description = "Display the Tree-sitter parse tree for a file"
command = "tree-sitter-debugger --lang {{language}}"
stdin = "{{content}}"
safe = true

[[functions.parameters]]
name = "language"
type = "string"
description = "Programming language of the file (e.g., python, javascript, rust)"
required = true

[[functions.parameters]]
name = "content"
type = "string"
description = "Code to show the tree structure of. Always provide valid code"
required = true

[[functions]]
name = "run_query"
description = "Run a Tree-sitter query on a file"
command = "tree-sitter-debugger --lang {{language}} --query '{{query}}'"
stdin = "{{content}}"
safe = true

[[functions.parameters]]
name = "language"
type = "string"
description = "Programming language of the file (e.g., python, javascript, rust)"
required = true

[[functions.parameters]]
name = "query"
type = "string"
description = "Tree-sitter query to run"
required = true

[[functions.parameters]]
name = "content"
type = "string"
description = "Code to show the tree structure of. Always provide valid code"
required = true
